#                 __
#    ____ _____  |  | _____
#   /    \\__  \ |  | \__  \
#  |   |  \/ __ \|  |__/ __ \_
#  |___|  (____  /____(____  /
#       \/     \/          \/
#
# Copyright (C) 2021, 2022 Blake Lee
#
# This file is part of nala
#
# nala is program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# nala is program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with nala.  If not, see <https://www.gnu.org/licenses/>.

_nala()
{
	local cur=${COMP_WORDS[COMP_CWORD]}
	local prev=${COMP_WORDS[1]}

	local GLOBAL_OPTIONS='
		-h --help
		-f --fix-broken
		--debug
		--verbose
		--version
		--license
		--update
	'

	local DPKG_OPTIONS='
		--no-install-recommends
		--install-suggests
		--no-aptlist
		--non-interactive
		--non-interactive-full
		--confold
		--confnew
		--confdef
		--confmiss
		--confask
	'

	_get_first_arg()
	{
		local i

		arg=
		for ((i = 1; i < COMP_CWORD; i++)); do
			if [[ ${COMP_WORDS[i]} != -* ]]; then
				arg=${COMP_WORDS[i]}
				break
			fi
		done
	}

	_get_removable()
	{
		grep-status -P -e "^$1" -a -FStatus 'ok installed' -n -s Package
	}

	case $prev in
		--help | --version | --license | -!(-*)[chslSbopitT])
			return
			;;
	esac

	local arg
	_get_first_arg

	if [[ -z $arg ]]; then
		if [[ $cur == -* ]]; then
			COMPREPLY=( $( compgen -W "$GLOBAL_OPTIONS" -- "$cur") )
		else
			COMPREPLY=( $( compgen -W 'show search install remove purge update upgrade fetch history clean moo' -- "$cur") )
		fi
	else
		# supported options per command
		if [[ "$cur" == -* ]]; then
			case $arg in
				install)
					COMPREPLY=( $( compgen -W '
						-y --assume-yes
						-d --download-only
						--raw-dpkg
						--no-autoremove
						--no-fix-broken
						'"$DPKG_OPTIONS""$GLOBAL_OPTIONS" -- "$cur" ) )
					return 0
					;;
				remove|purge)
					COMPREPLY=( $( compgen -W '
						-y --assume-yes
						-d --download-only
						--raw-dpkg
						--no-autoremove
						--no-fix-broken
						'"$GLOBAL_OPTIONS" -- "$cur" ) )
					return 0
					;;
				update|upgrade)
					COMPREPLY=( $( compgen -W '
						--no-full
						-y --assume-yes
						-d --download-only
						--no-update
						--raw-dpkg
						--no-autoremove
						'"$DPKG_OPTIONS""$GLOBAL_OPTIONS" -- "$cur" ) )
					return 0
					;;
				fetch)
					COMPREPLY=( $( compgen -W '
						--fetches
						--debian
						--ubuntu
						--country
						--foss'"$GLOBAL_OPTIONS" -- "$cur" ) )
					return 0
					;;
				search)
					COMPREPLY=( $( compgen -W '
						--names
						--installed
						--full'"$GLOBAL_OPTIONS" -- "$cur" ) )
					return 0
					;;
				show)
					COMPREPLY=( $( compgen -W '
						-a --all-versions'"$GLOBAL_OPTIONS" -- "$cur" ) )
					return 0
					;;
				history|clean)
					COMPREPLY=( $( compgen -W "$GLOBAL_OPTIONS" -- "$cur" ) )
					return 0
					;;
				moo)
					COMPREPLY=( $( compgen -W '' -- "$cur" ) )
					return 0
					;;
			esac
		else
			case $arg in
				install)
					COMPREPLY=( $( apt-cache --no-generate pkgnames "$cur" 2> /dev/null ) )
					if [[ "$cur" == */* ]]; then
						COMPREPLY=( $( compgen -f -- "$cur" ) )
					fi
					return 0
					;;
				remove)
					COMPREPLY=( $( _get_removable $cur ) )
					return 0
					;;
				history)
					if [[ -z $cur ]]; then
						if [[ -z ${COMP_WORDS[2]} ]]; then
							COMPREPLY=( $( compgen -W 'info undo redo clear' -- "$cur" ) )
						fi

					fi
					return 0
					;;
				show|list)
					COMPREPLY=( $( apt-cache --no-generate pkgnames "$cur" 2> /dev/null ) )
					return 0
					;;
					moo)
					COMPREPLY=( $( compgen -W 'moo' -- "$cur" ) )
					return 0
					;;
			esac
		fi
	fi

} &&
complete -F _nala nala

# This is a config to be initialized after zsh is initialized
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# creating a new widget to override ctrl-t of fzf

# if ( hash fzf-ueberzogen.sh 2>/dev/null ) && ( hash imgprev 2>/dev/null );then
#   ctt(){
#     if hash fd 2>/dev/null;then
#       output=$(fd --hidden | fzf-ueberzogen.sh --bind=ctrl-space:select --preview='imgprev {}' --height=60% --layout=reverse)
#     else
#       find . | fzf-ueberzogen.sh --bind=ctrl-space:select --preview='imgprev {}' --height=60% --layout=reverse     
#     fi
#     zle reset-prompt
#     echo $output
#     zle reset-prompt
#     return 0
#   }
#   zle -N ctt
#   bindkey -M emacs '^T' ctt
#   bindkey -M vicmd '^T' ctt
#   bindkey -M viins '^T' ctt
# fi




# 'emulate' 'zsh' '-o' 'no_aliases'

if ( hash fzf-ueberzogen.sh 2>/dev/null ) && ( hash imgprev 2>/dev/null );then
{

# [[ -o interactive ]] || return 0

# CTRL-T - Paste the selected file path(s) into the command line
__fsel-uber() {
  local cmd="${FZF_CTRL_T_COMMAND}"
  setopt localoptions pipefail no_aliases 2> /dev/null
  local item
  eval "$cmd" | $(__fzfcmd-uber) -m --height=60% --layout=reverse --preview='imgprev {}' | while read item; do
    echo -n "${(q)item} "
  done
  local ret=$?
  echo
  return $ret
}

__fzfcmd-uber() {
  [ -n "$TMUX_PANE" ] && { [ "${FZF_TMUX:-0}" != 0 ] || [ -n "$FZF_TMUX_OPTS" ]; } &&
    echo "fzf-tmux ${FZF_TMUX_OPTS:--d${FZF_TMUX_HEIGHT:-40%}} -- " || echo "fzf-ueberzogen.sh"
}

fzf-file-widget-uber() {
  LBUFFER="${LBUFFER}$(__fsel-uber)"
  local ret=$?
  zle reset-prompt
  return $ret
}
zle     -N            fzf-file-widget-uber
bindkey -M emacs '^T' fzf-file-widget-uber
bindkey -M vicmd '^T' fzf-file-widget-uber
bindkey -M viins '^T' fzf-file-widget-uber

}
fi

bindkey "^ " autosuggest-accept
